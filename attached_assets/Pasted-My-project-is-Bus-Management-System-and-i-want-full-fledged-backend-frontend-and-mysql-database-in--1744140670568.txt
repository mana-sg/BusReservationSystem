My project is Bus Management System and i want full fledged backend, frontend and mysql database in JAVA MVC (Spring framework)

Abstract: 
The Bus Management System is a software application that provides a 
streamlined solution for passengers, drivers, and administrators to manage bus 
operations efficiently. The system enables passengers to book tickets, track 
buses in real-time, and receive notifications. It allows administrators to manage 
routes, schedules, fleets, and payments, while drivers receive updates on 
assigned routes. Maintenance staff can schedule repairs and track fleet status. 
The system aims to improve the reliability and efficiency of public 
transportation using a centralized digital approach. 
 
Objectives: 
• Efficient Ticket Booking: Provide an easy-to-use interface for passengers 
to book tickets online. 
• Bus Tracking: Enable real-time location tracking for buses. 
• Automated Scheduling & Dispatch: Optimize bus allocation based on 
demand. 
• Fleet Maintenance Tracking: Ensure timely bus maintenance and reduce 
downtime. 
• Secure Payments: Integrate payment processing with proper validation. 
• Admin Controls: Allow management of user roles, route assignments, 
and report generation. 
Features & Modules: 
1. Passenger Module: 
• Login & Authentication (Secure access to system) 
• Search Bus Routes (Find available buses) 
• Book Tickets (Reserve seats and generate digital tickets) 
• Payment Integration (Secure online transactions) 
• View Booking History (Check past and upcoming trips) 
• Receive Notifications (Updates on bus schedule and delays) 
2.Driver Module: 
• View Assigned Route (Receive dispatch notifications) 
• Update Bus Location (Live tracking integration) 
• Report Issues (Report mechanical issues or emergencies) 
3.Admin Module: 
• Manage Users (Add/remove passengers, drivers, and staff) 
• Assign Buses to Routes (Optimize fleet scheduling) 
• Track Bus Status (Monitor fleet operations) 
• Generate Reports (Revenue, occupancy, and maintenance logs) 
4.Maintenance Module: -  Monitor Fleet Status (Check bus condition and schedule repairs) -  Issue Work Orders (Assign repair teams) 
Technologies Used: 
Frontend: JavaFX (Java) / Qt (C++) 
Backend: Spring Boot (Java) / C++ with MySQL 
Database: MySQL 
Networking: REST APIs for real-time updates 
Payment Gateway: Stripe/PayPal Integration 
System Architecture: -  Three-tier architecture (Presentation, Business Logic, and Database 
Layer) -  Role-Based Access Control (RBAC) (Passengers, Drivers, Admins, 
Maintenance) -  Cloud Integration for Reports & Notifications 
Expected Outcomes: 
• Improved public transportation management 
• Seamless passenger experience 
• Optimized fleet utilization 
• Data-driven decision-making for transport authorities 
Future Scope: - AI-based Route Optimization (Predict peak hours and suggest better 
scheduling) - Smart Traffic System Integration (Real-time rerouting based on 
congestion) - Autonomous Fleet Management (Self-driving bus testing and scheduling) 
Conclusion: 
The Bus Management System simplifies and automates public transport 
operations, ensuring better fleet utilization, improved customer experience, 
and real-time monitoring. With enhanced security and efficient scheduling, the 
system contributes to the modernization of urban mobility. 

I want fully fledged website in Java Spring framework using MVC and strictly Java with all files in .java for backend and DO NOT USE TSX OR REACT OR NODE 
 do the website using Java Spring Framework or CROW framework and, I want backend as well with database and full backend in java(.java) extension 
It should have MVC framework and adhere to SOLID and GRASP principles and must have 4 design pattern and 4 design principles, 1 structural pattern, 1 anti pattern and 1 behavioral pattern "must " 
I want a fully fledged website with Indian cities and in rupees and also make sure all main use cases are implemented (4 major use cases and 4 minor use cases)  
please do both backend frontend and database also